:ruby
  product = @product
  name = product.name
  description = product.description
  cover_url = product.cover.url
  
  home_url = "/products/#{@product.id}"
  # issues_url = "/products/#{@product.id}/issues"
  # wiki_url = "/products/#{@product.id}/wiki"
  issues_url = "javascript:;"
  wiki_url = "javascript:;"
  
  new_story_url = "/products/#{@product.id}/stories/new"
  new_stream_url = "/products/#{@product.id}/streams/new"

  stories_count = product.stories.count
  streams_count = product.streams.count

-htitle name

=render 'index/parts/page_nav'

.page-product-show
  .headbar
    .name=name
    .desc=description
    .nav
      %a.item{:href=>home_url}
        .t 故事白板
        .c=stories_count
      %a.item.disabled{:href=>issues_url} BUG和建议
      %a.item.disabled{:href=>wiki_url} WIKI
    
    -if admin_logged_in?
      .admin-ops
        %a.add-story{:href=>new_story_url} ADMIN:创建故事
        %a.add-stream{:href=>new_stream_url} ADMIN:创建序列
    
  .product-streams
    -product.streams.each do |stream|
      :ruby
        title = truncate_u stream.title, 15
        stories_count = stream.stories.count
        last_story = stream.stories.last
        stream_url = "/streams/#{stream.id}"
        working_hours = stream.working_hours
        
        members_limit = stream.members[0..9] # 10个
        
      .stream
        .box
          .ct=link_to title, stream_url
          .stories-and-hours
            .stories-count=stories_count
            .working-hours="#{working_hours}H"
          .split
          .members
            -members_limit.each do |member|
              .member
                .avatar
                  =link_to "/members/#{member.id}", :title=>member.name do
                    =avatar member, :mini
            -(10-members_limit.count).times do
              .member.blank
          -if !last_story.blank?
            .last-story
              .updated_at=last_story.updated_at
              .how=truncate_u last_story.how_to_demo, 32
            
        
  .product-stats
    .stat.stories
      .t 故事总数
      %span.c=stories_count
      %span.d 个
    .stat.streams
      .t 序列总数
      %span.c=streams_count
      %span.d 个
      